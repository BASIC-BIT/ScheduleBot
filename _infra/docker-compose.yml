version: '3.8'

services:
  # The main ScheduleBot application
  schedulebot:
    build:
      context: ../ # Build from the root directory of the project
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db
    ports:
      - "8080:80" # Main application port
      - "8443:443" # HTTPS port (if used)
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - MYSQL_SERVER=db
      - MYSQL_DB=schedulebot
      - MYSQL_USER=schedulebot
      - MYSQL_USER_PW=${MYSQL_PASSWORD}
      - DISCORD_EVENT_ROLE_PREFIX=FacelessEvent
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT:-Production}
    volumes:
      - schedulebot_data:/app/data
      - ${SSL_CERT_PATH:-./certs}:/app/certs:ro # Optional SSL certificates
    networks:
      - schedulebot_network

  # MySQL Database
  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=schedulebot
      - MYSQL_USER=schedulebot
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - schedulebot_network
    command: --default-authentication-plugin=mysql_native_password

  # Nginx reverse proxy for clean URLs and HTTPS
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/www:/var/www/html:ro
    depends_on:
      - schedulebot
    networks:
      - schedulebot_network

  # Monitoring with Prometheus & Grafana (optional)
  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - schedulebot_network

  grafana:
    image: grafana/grafana:latest
    restart: always
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    networks:
      - schedulebot_network

volumes:
  mysql_data: {}
  schedulebot_data: {}
  prometheus_data: {}
  grafana_data: {}

networks:
  schedulebot_network:
    driver: bridge 