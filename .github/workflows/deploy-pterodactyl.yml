name: Deploy to Pterodactyl

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --no-restore --configuration Release
        
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release
        
      - name: Publish
        run: dotnet publish --no-build --configuration Release --output ./publish
      
      - name: Create deployment archive
        run: zip -r deploy.zip ./publish
      
      - name: Deploy to Pterodactyl
        env:
          PTERODACTYL_PANEL_URL: ${{ secrets.PTERODACTYL_PANEL_URL }}
          PTERODACTYL_API_KEY: ${{ secrets.PTERODACTYL_API_KEY }}
          SERVER_UUID: ${{ secrets.PTERODACTYL_SERVER_UUID }}
        run: |
          # Upload the archive to Pterodactyl server
          curl -X POST \
            "${PTERODACTYL_PANEL_URL}/api/client/servers/${SERVER_UUID}/files/upload" \
            -H "Authorization: Bearer ${PTERODACTYL_API_KEY}" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -d '{
              "file": "deploy.zip"
            }' > upload_response.json
          
          # Extract the URL from the response
          UPLOAD_URL=$(jq -r '.attributes.url' upload_response.json)
          
          # Upload the actual file
          curl -X POST \
            "${UPLOAD_URL}" \
            -F "upload=@deploy.zip" \
            --progress-bar
          
          # Trigger server restart
          curl -X POST \
            "${PTERODACTYL_PANEL_URL}/api/client/servers/${SERVER_UUID}/power" \
            -H "Authorization: Bearer ${PTERODACTYL_API_KEY}" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -d '{
              "signal": "restart"
            }' 